{
  "openapi": "3.0.4",
  "info": {
    "title": "MiHCM External API",
    "description": "API for MiHCM HR system",
    "contact": {
      "name": "MiHCM Support",
      "email": "support@mihcm.com"
    },
    "version": "v1"
  },
  "servers": [
    {
      "url": "https://data.mihcm.com",
      "description": "Production API"
    }
  ],
  "paths": {
    "/api/leave-allocations": {
      "get": {
        "tags": [
          "Leave Allocations"
        ],
        "summary": "Gets leave allocation for a specific employee and year",
        "operationId": "GetLeaveAllocation",
        "parameters": [
          {
            "name": "employeeCode",
            "in": "query",
            "description": "The employee code",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "year",
            "in": "query",
            "description": "The leave year",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the leave allocation data",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/LeaveAllocationDTO"
                  }
                }
              }
            }
          },
          "404": {
            "description": "If no leave allocations are found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "If an error occurs"
          }
        }
      }
    },
    "/api/leave-reasons": {
      "get": {
        "tags": [
          "Leave Reasons"
        ],
        "summary": "Gets leave reasons for a specific leave type",
        "operationId": "GetLeaveReasons",
        "parameters": [
          {
            "name": "leaveTypeCode",
            "in": "query",
            "description": "The leave type code",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the list of leave reasons",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/LeaveReasonDTO"
                  }
                }
              }
            }
          },
          "500": {
            "description": "If an error occurs"
          }
        }
      }
    },
    "/api/leave-types": {
      "get": {
        "tags": [
          "Leave Types"
        ],
        "summary": "Gets all active leave types",
        "operationId": "GetLeaveTypes",
        "responses": {
          "200": {
            "description": "Returns the list of leave types",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/LeaveTypeDTO"
                  }
                }
              }
            }
          },
          "500": {
            "description": "If an error occurs"
          }
        }
      }
    },
    "/api/reach-hr-feedback-types": {
      "get": {
        "tags": [
          "Reach HR Feedback Types"
        ],
        "summary": "Gets all feedback types",
        "operationId": "GetAllFeedbackTypes",
        "responses": {
          "200": {
            "description": "Returns the list of feedback types",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ReachHrFeedbackTypeDTO"
                  }
                }
              }
            }
          },
          "500": {
            "description": "If an error occurs"
          }
        }
      }
    },
    "/api/reach-hr-feedback-types/{id}": {
      "get": {
        "tags": [
          "Reach HR Feedback Types"
        ],
        "summary": "Gets a feedback type by ID",
        "operationId": "GetFeedbackTypeById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The feedback type ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the feedback type",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReachHrFeedbackTypeDTO"
                }
              }
            }
          },
          "404": {
            "description": "If the feedback type is not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "If an error occurs"
          }
        }
      }
    },
    "/api/reach-hr-requests": {
      "get": {
        "tags": [
          "Reach HR Requests"
        ],
        "summary": "Gets all reach HR requests",
        "operationId": "GetAllReachHrRequests",
        "responses": {
          "200": {
            "description": "Returns the list of reach HR requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ReachHrRequestDTO"
                  }
                }
              }
            }
          },
          "500": {
            "description": "If an error occurs"
          }
        }
      },
      "post": {
        "tags": [
          "Reach HR Requests"
        ],
        "summary": "Creates a new reach HR request",
        "operationId": "CreateReachHrRequest",
        "requestBody": {
          "description": "The reach HR request data",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateReachHrRequestDTO"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateReachHrRequestDTO"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateReachHrRequestDTO"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Returns the newly created reach HR request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReachHrRequestDTO"
                }
              }
            }
          },
          "400": {
            "description": "If the request is invalid",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "If an error occurs"
          }
        }
      }
    },
    "/api/reach-hr-requests/{id}": {
      "get": {
        "tags": [
          "Reach HR Requests"
        ],
        "summary": "Gets a reach HR request by ID",
        "operationId": "GetReachHrRequestById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The reach HR request ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the reach HR request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReachHrRequestDTO"
                }
              }
            }
          },
          "404": {
            "description": "If the reach HR request is not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "If an error occurs"
          }
        }
      },
      "put": {
        "tags": [
          "Reach HR Requests"
        ],
        "summary": "Updates an existing reach HR request",
        "operationId": "UpdateReachHrRequest",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the reach HR request to update",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "The updated reach HR request data",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReachHrRequestDTO"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ReachHrRequestDTO"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ReachHrRequestDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Returns the updated reach HR request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReachHrRequestDTO"
                }
              }
            }
          },
          "400": {
            "description": "If the request is invalid",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "If the reach HR request is not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "If an error occurs"
          }
        }
      },
      "delete": {
        "tags": [
          "Reach HR Requests"
        ],
        "summary": "Deletes a reach HR request",
        "operationId": "DeleteReachHrRequest",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the reach HR request to delete",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "If the reach HR request is successfully deleted"
          },
          "404": {
            "description": "If the reach HR request is not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "If an error occurs"
          }
        }
      }
    },
    "/api/reach-hr-requests/employee/{employeeCode}": {
      "get": {
        "tags": [
          "Reach HR Requests"
        ],
        "summary": "Gets all reach HR requests for an employee",
        "operationId": "GetReachHrRequestsByEmployeeCode",
        "parameters": [
          {
            "name": "employeeCode",
            "in": "path",
            "description": "The employee code",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the list of reach HR requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ReachHrRequestDTO"
                  }
                }
              }
            }
          },
          "500": {
            "description": "If an error occurs"
          }
        }
      }
    },
    "/api/work-activities": {
      "get": {
        "tags": [
          "Work Activities"
        ],
        "summary": "Gets all work activities for an employee on a specific date",
        "operationId": "GetWorkActivities",
        "parameters": [
          {
            "name": "employeeCode",
            "in": "query",
            "description": "The employee code",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "date",
            "in": "query",
            "description": "The date in yyyy-MM-dd format",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "onlyPending",
            "in": "query",
            "description": "Only get pending activities",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the list of work activities",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WorkActivityDTO"
                  }
                }
              }
            }
          },
          "400": {
            "description": "If the employee code is invalid",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "If no work activities are found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "If an error occurs"
          }
        }
      },
      "post": {
        "tags": [
          "Work Activities"
        ],
        "summary": "Creates a new work activity",
        "operationId": "CreateWorkActivity",
        "requestBody": {
          "description": "The work activity data containing EmployeeCode, Date, CategoryId, Description and HoursSpent",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WorkActivityRequestDTO"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WorkActivityRequestDTO"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WorkActivityRequestDTO"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Returns the created work activity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkActivityDTOServiceResult"
                }
              }
            }
          },
          "400": {
            "description": "If the request is invalid",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "If an error occurs"
          }
        }
      }
    },
    "/api/work-activities/{id}": {
      "put": {
        "tags": [
          "Work Activities"
        ],
        "summary": "Updates an existing work activity",
        "operationId": "UpdateWorkActivity",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the work activity to update",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "The updated work activity data",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WorkActivityRequestDTO"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WorkActivityRequestDTO"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WorkActivityRequestDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Returns the updated work activity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkActivityDTOServiceResult"
                }
              }
            }
          },
          "400": {
            "description": "If the request is invalid",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "If the work activity is not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "If an error occurs"
          }
        }
      }
    },
    "/api/work-activity-categories": {
      "get": {
        "tags": [
          "Work Activity Categories"
        ],
        "summary": "Gets all active work activity categories",
        "operationId": "GetWorkActivityCategories",
        "responses": {
          "200": {
            "description": "Returns the list of categories",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WorkActivityCategoryDTO"
                  }
                }
              }
            }
          },
          "500": {
            "description": "If an error occurs"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "CreateReachHrRequestDTO": {
        "type": "object",
        "properties": {
          "employeeCode": {
            "type": "integer",
            "format": "int32"
          },
          "feedbackTypeId": {
            "type": "integer",
            "format": "int32"
          },
          "subject": {
            "type": "string",
            "nullable": true
          },
          "message": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "LeaveAllocationDTO": {
        "type": "object",
        "properties": {
          "leaveTypeCode": {
            "type": "integer",
            "format": "int32"
          },
          "employeeCode": {
            "type": "integer",
            "format": "int32"
          },
          "leaveYear": {
            "type": "integer",
            "format": "int32"
          },
          "allocated": {
            "type": "number",
            "format": "float"
          },
          "used": {
            "type": "number",
            "format": "float"
          },
          "pending": {
            "type": "number",
            "format": "float"
          },
          "leaveTypeUnlimited": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "LeaveReasonDTO": {
        "type": "object",
        "properties": {
          "leaveReasonCode": {
            "type": "string",
            "nullable": true
          },
          "leaveReasonName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "LeaveTypeDTO": {
        "type": "object",
        "properties": {
          "leaveTypeCode": {
            "type": "string",
            "nullable": true
          },
          "leaveTypeName": {
            "type": "string",
            "nullable": true
          },
          "systemCode": {
            "type": "string",
            "nullable": true
          },
          "requiresCovering": {
            "type": "boolean"
          },
          "requiresAttachment": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "ProblemDetails": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "detail": {
            "type": "string",
            "nullable": true
          },
          "instance": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": { }
      },
      "ReachHrFeedbackTypeDTO": {
        "type": "object",
        "properties": {
          "feedbackTypeId": {
            "type": "integer",
            "format": "int32"
          },
          "feedbackTypeName": {
            "type": "string",
            "nullable": true
          },
          "enableRating": {
            "type": "boolean"
          },
          "status": {
            "type": "boolean"
          },
          "active": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "ReachHrRequestDTO": {
        "type": "object",
        "properties": {
          "reachHrId": {
            "type": "integer",
            "format": "int32"
          },
          "employeeCode": {
            "type": "integer",
            "format": "int32"
          },
          "feedbackTypeId": {
            "type": "integer",
            "format": "int32"
          },
          "requestDate": {
            "type": "string",
            "format": "date-time"
          },
          "subject": {
            "type": "string",
            "nullable": true
          },
          "message": {
            "type": "string",
            "nullable": true
          },
          "taskStatus": {
            "type": "string",
            "nullable": true
          },
          "comment": {
            "type": "string",
            "nullable": true
          },
          "attachements": {
            "type": "string",
            "nullable": true
          },
          "satisfactoryRating": {
            "type": "number",
            "format": "double"
          },
          "responseComment": {
            "type": "string",
            "nullable": true
          },
          "deleted": {
            "type": "boolean"
          },
          "feedbackTypeName": {
            "type": "string",
            "nullable": true
          },
          "requestedDateString": {
            "type": "string",
            "nullable": true
          },
          "isNotify": {
            "type": "boolean"
          },
          "enableRating": {
            "type": "boolean"
          },
          "attachedDocument": {
            "type": "string",
            "nullable": true
          },
          "responseCount": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "WorkActivityCategoryDTO": {
        "type": "object",
        "properties": {
          "categoryId": {
            "type": "integer",
            "format": "int32"
          },
          "categoryName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WorkActivityDTO": {
        "required": [
          "categoryId",
          "date",
          "employeeCode"
        ],
        "type": "object",
        "properties": {
          "itemId": {
            "type": "integer",
            "format": "int32"
          },
          "employeeCode": {
            "type": "integer",
            "format": "int32"
          },
          "date": {
            "type": "string",
            "format": "date-time"
          },
          "headerId": {
            "type": "integer",
            "format": "int32"
          },
          "categoryId": {
            "type": "integer",
            "format": "int32"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "hoursSpent": {
            "type": "string",
            "nullable": true
          },
          "requestStatus": {
            "type": "string",
            "nullable": true
          },
          "approverComment": {
            "type": "string",
            "nullable": true
          },
          "categoryName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WorkActivityDTOServiceResult": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "data": {
            "$ref": "#/components/schemas/WorkActivityDTO"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "message": {
            "type": "string",
            "nullable": true
          },
          "errors": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WorkActivityRequestDTO": {
        "required": [
          "categoryId",
          "date",
          "employeeCode"
        ],
        "type": "object",
        "properties": {
          "employeeCode": {
            "type": "integer",
            "format": "int32"
          },
          "date": {
            "type": "string",
            "format": "date-time"
          },
          "categoryId": {
            "type": "integer",
            "format": "int32"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "hoursSpent": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      }
    },
    "securitySchemes": {
      "ApiKey": {
        "type": "apiKey",
        "description": "API Key Authentication",
        "name": "Ocp-Apim-Subscription-Key",
        "in": "header"
      }
    }
  },
  "security": [
    {
      "ApiKey": [ ]
    }
  ]
}